import copy

from cryptidsolver.clue import Clue

# TODO Is there a way to provide new Clue instance on every call

FOREST_OR_DESERT = Clue(0, set(["F", "D"]))
FOREST_OR_WATER = Clue(0, set(["F", "W"]))
FOREST_OR_SWAMP = Clue(0, set(["F", "S"]))
FOREST_OR_MOUNTAIN = Clue(0, set(["F", "M"]))
DESERT_OR_WATER = Clue(0, set(["D", "W"]))
DESERT_OR_SWAMP = Clue(0, set(["D", "S"]))
DESERT_OR_MOUNTAIN = Clue(0, set(["D", "M"]))
WATER_OR_SWAMP = Clue(0, set(["W", "S"]))
WATER_OR_MOUNTAIN = Clue(0, set(["W", "M"]))
SWAMP_OR_MOUNTAIN = Clue(0, set(["S", "M"]))

ONE_FROM_FOREST = Clue(1, set(["F"]))
ONE_FROM_DESERT = Clue(1, set(["D"]))
ONE_FROM_SWAMP = Clue(1, set(["S"]))
ONE_FROM_MOUNTAIN = Clue(1, set(["M"]))
ONE_FROM_WATER = Clue(1, set(["W"]))
ONE_FROM_ANIMAL = Clue(1, set(["cougar", "bear"]), clue_type="animal")

TWO_FROM_STANDING_STONE = Clue(2, set(["stone"]), clue_type="structure")
TWO_FROM_ABANDONED_SHACK = Clue(2, set(["shack"]), clue_type="structure")
TWO_FROM_COUGAR = Clue(2, set(["cougar"]), clue_type="animal")
TWO_FROM_BEAR = Clue(2, set(["bear"]), clue_type="animal")

THREE_FROM_BLUE = Clue(3, set(["blue"]), clue_type="structure")
THREE_FROM_WHITE = Clue(3, set(["white"]), clue_type="structure")
THREE_FROM_GREEN = Clue(3, set(["green"]), clue_type="structure")
THREE_FROM_BLACK = Clue(3, set(["black"]), clue_type="structure")

# TODO Refactor to contain normal clues and inverted clues differently
# This will remove the need to remove THREE_FROM_BLACK in multiple locations

CLUE_COLLECTION = set(
    [
        FOREST_OR_DESERT,
        FOREST_OR_WATER,
        FOREST_OR_SWAMP,
        FOREST_OR_MOUNTAIN,
        DESERT_OR_WATER,
        DESERT_OR_SWAMP,
        DESERT_OR_MOUNTAIN,
        WATER_OR_SWAMP,
        WATER_OR_MOUNTAIN,
        SWAMP_OR_MOUNTAIN,
        ONE_FROM_FOREST,
        ONE_FROM_DESERT,
        ONE_FROM_SWAMP,
        ONE_FROM_MOUNTAIN,
        ONE_FROM_WATER,
        ONE_FROM_ANIMAL,
        TWO_FROM_STANDING_STONE,
        TWO_FROM_ABANDONED_SHACK,
        TWO_FROM_COUGAR,
        TWO_FROM_BEAR,
        THREE_FROM_BLUE,
        THREE_FROM_WHITE,
        THREE_FROM_GREEN,
        THREE_FROM_BLACK,
    ]
)

__CLUE_LOOKUP = {
    "alpha": {
        1: TWO_FROM_BEAR,
        2: WATER_OR_MOUNTAIN,
        3: ONE_FROM_MOUNTAIN,
        4: "not_water/mountain",
        5: "not_forest/water",
        6: "not_2bear",
        7: "not_desert/water",
        8: "not_forest/swamp",
        9: SWAMP_OR_MOUNTAIN,
        10: FOREST_OR_WATER,
        11: "not_2stone",
        12: ONE_FROM_FOREST,
        13: THREE_FROM_WHITE,
        14: "not_1water",
        15: "not_forest/mountain",
        16: "not_1animal",
        17: TWO_FROM_COUGAR,
        18: THREE_FROM_BLUE,
        19: ONE_FROM_SWAMP,
        20: THREE_FROM_GREEN,
        21: TWO_FROM_ABANDONED_SHACK,
        22: "not_desert/water",
        23: "not_2cougar",
        24: "not_2shack",
        25: DESERT_OR_WATER,
        26: ONE_FROM_WATER,
        27: DESERT_OR_WATER,
        28: ONE_FROM_SWAMP,
        29: FOREST_OR_MOUNTAIN,
        30: ONE_FROM_FOREST,
        31: THREE_FROM_BLACK,
        32: "not_forest/swamp",
        33: THREE_FROM_GREEN,
        34: DESERT_OR_SWAMP,
        35: "not_swamp/mountain",
        36: THREE_FROM_BLUE,
        37: "not_1mountain",
        38: "not_forest/desert",
        39: "not_2bear",
        40: "not_swamp/mountain",
        41: "not_2shack",
        42: THREE_FROM_WHITE,
        43: "not_space/desert",
        44: WATER_OR_SWAMP,
        45: "not_desert/mountain",
        46: TWO_FROM_STANDING_STONE,
        47: "not_water/swamp",
        48: TWO_FROM_COUGAR,
        49: "not_1animal",
        50: ONE_FROM_ANIMAL,
        51: "not_desert/swamp",
        52: ONE_FROM_MOUNTAIN,
        53: "not_3white",
        54: FOREST_OR_SWAMP,
        55: TWO_FROM_STANDING_STONE,
        56: DESERT_OR_MOUNTAIN,
        57: FOREST_OR_DESERT,
        58: "not_1swamp",
        59: "not_3black",
        60: "not_water/swamp",
        61: DESERT_OR_SWAMP,
        62: "not_3green",
        63: "not_desert/mountain",
        64: "not_forest/mountain",
        65: ONE_FROM_DESERT,
        66: DESERT_OR_MOUNTAIN,
        67: "not_1desert",
        68: FOREST_OR_SWAMP,
        69: ONE_FROM_DESERT,
        70: "not_2stone",
        71: "not_water/mountain",
        72: SWAMP_OR_MOUNTAIN,
        73: "not_forest/water",
        74: "not_1forest",
        75: "not_forest/desert",
        76: "not_3white",
        77: FOREST_OR_DESERT,
        78: "not_1forest",
        79: "not_1mountain",
        80: FOREST_OR_MOUNTAIN,
        81: "not_3blue",
        82: "not_desert/swamp",
        83: TWO_FROM_ABANDONED_SHACK,
        84: ONE_FROM_ANIMAL,
        85: ONE_FROM_WATER,
        86: "not_1water",
        87: "not_3blue",
        88: FOREST_OR_WATER,
        89: "not_1swamp",
        90: "not_3black",
        91: TWO_FROM_BEAR,
        92: WATER_OR_MOUNTAIN,
        93: THREE_FROM_BLACK,
        94: "not_2cougar",
        95: WATER_OR_SWAMP,
        96: "not_3green",
    },
    "beta": {
        1: DESERT_OR_SWAMP,
        2: TWO_FROM_COUGAR,
        3: THREE_FROM_BLUE,
        4: "not_forest/swamp",
        5: THREE_FROM_GREEN,
        6: ONE_FROM_DESERT,
        7: "not_desert/swamp",
        8: FOREST_OR_SWAMP,
        9: "not_water/swamp",
        10: "not_3black",
        11: TWO_FROM_ABANDONED_SHACK,
        12: "not_1desert",
        13: FOREST_OR_WATER,
        14: "not_3white",
        15: "not_1animal",
        16: TWO_FROM_BEAR,
        17: ONE_FROM_WATER,
        18: "not_swamp/mountain",
        19: ONE_FROM_MOUNTAIN,
        20: "not_3black",
        21: "not_1swamp",
        22: THREE_FROM_BLACK,
        23: "not_3green",
        24: "not_forest/desert",
        25: ONE_FROM_SWAMP,
        26: "not_forest/mountain",
        27: "not_2bear",
        28: FOREST_OR_MOUNTAIN,
        29: SWAMP_OR_MOUNTAIN,
        30: "not_2cougar",
        31: "not_2stone",
        32: WATER_OR_SWAMP,
        33: DESERT_OR_WATER,
        34: THREE_FROM_BLUE,
        35: TWO_FROM_STANDING_STONE,
        36: WATER_OR_MOUNTAIN,
        37: "not_forest/swamp",
        38: "not_water/swamp",
        39: "not_2shack",
        40: "not_1mountain",
        41: "not_desert/mountain",
        42: ONE_FROM_FOREST,
        43: TWO_FROM_BEAR,
        44: "not_1animal",
        45: THREE_FROM_GREEN,
        46: ONE_FROM_ANIMAL,
        47: DESERT_OR_MOUNTAIN,
        48: "not_bear",
        49: ONE_FROM_MOUNTAIN,
        50: "not_desert/water",
        51: "not_1forest",
        52: "not_2shack",
        53: TWO_FROM_ABANDONED_SHACK,
        54: ONE_FROM_SWAMP,
        55: "not_1desert",
        56: "not_desert/swamp",
        57: "not_desert/mountain",
        58: THREE_FROM_BLACK,
        59: "not_1forest",
        60: "not_3blue",
        61: ONE_FROM_WATER,
        62: FOREST_OR_WATER,
        63: DESERT_OR_WATER,
        64: THREE_FROM_WHITE,
        65: TWO_FROM_STANDING_STONE,
        66: TWO_FROM_COUGAR,
        67: ONE_FROM_ANIMAL,
        68: "not_1water",
        69: "not_3blue",
        70: "not_forest/desert",
        71: ONE_FROM_FOREST,
        72: "not_forest/mountain",
        73: DESERT_OR_SWAMP,
        74: WATER_OR_MOUNTAIN,
        75: "not_swamp/mountain",
        76: FOREST_OR_DESERT,
        77: DESERT_OR_WATER,
        78: "not_3white",
        79: THREE_FROM_WHITE,
        80: ONE_FROM_DESERT,
        81: "not_1mountain",
        82: FOREST_OR_DESERT,
        83: FOREST_OR_MOUNTAIN,
        84: "not_water/mountain",
        85: "not_1water",
        86: WATER_OR_SWAMP,
        87: "not_forest/water",
        88: "not_2cougar",
        89: DESERT_OR_MOUNTAIN,
        90: FOREST_OR_SWAMP,
        91: "not_water/mountain",
        92: SWAMP_OR_MOUNTAIN,
        93: "not_forest/water",
        94: "not_2stone",
        95: "not_3green",
        96: "not_1swamp",
    },
    "gamma": {
        1: THREE_FROM_BLUE,
        2: ONE_FROM_WATER,
        3: "not_water/mountain",
        4: FOREST_OR_SWAMP,
        5: "not_desert/water",
        6: THREE_FROM_BLUE,
        7: "not_1desert",
        8: "not_forest/swamp",
        9: "not_forest/water",
        10: "not_2stone",
        11: THREE_FROM_GREEN,
        12: TWO_FROM_STANDING_STONE,
        13: FOREST_OR_WATER,
        14: "not_3black",
        15: "not_forest/swamp",
        16: "not_2stone",
        17: "not_1mountain",
        18: DESERT_OR_MOUNTAIN,
        19: "not_desert/swamp",
        20: DESERT_OR_SWAMP,
        21: FOREST_OR_DESERT,
        22: "not_forest/desert",
        23: ONE_FROM_MOUNTAIN,
        24: "not_1swamp",
        25: THREE_FROM_BLACK,
        26: "not_3blue",
        27: ONE_FROM_FOREST,
        28: THREE_FROM_WHITE,
        29: ONE_FROM_ANIMAL,
        30: "not_3white",
        31: WATER_OR_SWAMP,
        32: SWAMP_OR_MOUNTAIN,
        33: "not_desert/swamp",
        34: "not_3green",
        35: THREE_FROM_GREEN,
        36: ONE_FROM_FOREST,
        37: "not_desert/water",
        38: "not_2bear",
        39: WATER_OR_MOUNTAIN,
        40: THREE_FROM_WHITE,
        41: WATER_OR_MOUNTAIN,
        42: "not_3blue",
        43: FOREST_OR_MOUNTAIN,
        44: TWO_FROM_BEAR,
        45: "not_1swamp",
        46: "not_1forest",
        47: THREE_FROM_BLACK,
        48: DESERT_OR_SWAMP,
        49: TWO_FROM_COUGAR,
        50: TWO_FROM_COUGAR,
        51: "not_swamp/mountain",
        52: "not_2bear",
        53: ONE_FROM_ANIMAL,
        54: TWO_FROM_BEAR,
        55: "not_forest/mountain",
        56: "not_water/swamp",
        57: "not_water/mountain",
        58: "not_1animal",
        59: "not_forest/water",
        60: "not_desert/mountain",
        61: "not_forest/desert",
        62: "not_1water",
        63: TWO_FROM_STANDING_STONE,
        64: "not_swamp/mountain",
        65: TWO_FROM_ABANDONED_SHACK,
        66: "not_water/swamp",
        67: "not_1mountain",
        68: ONE_FROM_DESERT,
        69: "not_2cougar",
        70: WATER_OR_SWAMP,
        71: TWO_FROM_ABANDONED_SHACK,
        72: "not_3green",
        73: ONE_FROM_WATER,
        74: FOREST_OR_DESERT,
        75: "not_1animal",
        76: "not_1forest",
        77: FOREST_OR_MOUNTAIN,
        78: "not_2shack",
        79: "not_forest/mountain",
        80: DESERT_OR_MOUNTAIN,
        81: ONE_FROM_DESERT,
        82: "not_1water",
        83: "not_2shack",
        84: ONE_FROM_SWAMP,
        85: DESERT_OR_WATER,
        86: "not_2cougar",
        87: FOREST_OR_WATER,
        88: "not_3black",
        89: FOREST_OR_SWAMP,
        90: DESERT_OR_MOUNTAIN,
        91: "not_3white",
        92: DESERT_OR_WATER,
        93: ONE_FROM_MOUNTAIN,
        94: ONE_FROM_SWAMP,
        95: "not_1desert",
        96: SWAMP_OR_MOUNTAIN,
    },
    "delta": {
        1: "not_swamp/mountain",
        2: TWO_FROM_BEAR,
        3: "not_2cougar",
        4: ONE_FROM_MOUNTAIN,
        5: "not_desert/mountain",
        6: "not_3black",
        7: FOREST_OR_DESERT,
        8: "not_forest/water",
        9: "not_2bear",
        10: "not_1water",
        11: DESERT_OR_WATER,
        12: "not_desert/swamp",
        13: TWO_FROM_BEAR,
        14: ONE_FROM_SWAMP,
        15: THREE_FROM_GREEN,
        16: "not_2stone",
        17: TWO_FROM_ABANDONED_SHACK,
        18: "not_2stone",
        19: FOREST_OR_MOUNTAIN,
        20: ONE_FROM_WATER,
        21: "not_1desert",
        22: THREE_FROM_BLACK,
        23: "not_water/mountain",
        24: WATER_OR_MOUNTAIN,
        25: SWAMP_OR_MOUNTAIN,
        26: ONE_FROM_DESERT,
        27: DESERT_OR_SWAMP,
        28: FOREST_OR_DESERT,
        29: THREE_FROM_BLACK,
        30: ONE_FROM_FOREST,
        31: "not_swamp/mountain",
        32: "not_3blue",
        33: "not_desert/water",
        34: DESERT_OR_MOUNTAIN,
        35: WATER_OR_SWAMP,
        36: THREE_FROM_WHITE,
        37: "not_water/mountain",
        38: "not_2shack",
        39: FOREST_OR_SWAMP,
        40: SWAMP_OR_MOUNTAIN,
        41: "not_water/swamp",
        42: ONE_FROM_SWAMP,
        43: THREE_FROM_BLUE,
        44: "not_1mountain",
        45: TWO_FROM_STANDING_STONE,
        46: ONE_FROM_DESERT,
        47: ONE_FROM_MOUNTAIN,
        48: "not_3white",
        49: TWO_FROM_STANDING_STONE,
        50: FOREST_OR_WATER,
        51: DESERT_OR_SWAMP,
        52: TWO_FROM_ABANDONED_SHACK,
        53: WATER_OR_MOUNTAIN,
        54: "not_forest/mountain",
        55: "not_3blue",
        56: THREE_FROM_WHITE,
        57: "not_water/swamp",
        58: ONE_FROM_ANIMAL,
        59: FOREST_OR_SWAMP,
        60: "not_forest/swamp",
        61: "not_1water",
        62: "not_1animal",
        63: TWO_FROM_COUGAR,
        64: "not_2bear",
        65: "not_forest/water",
        66: "not_3black",
        67: "not_1desert",
        68: "not_2shack",
        69: WATER_OR_SWAMP,
        70: "not_3green",
        71: "not_forest/swamp",
        72: TWO_FROM_COUGAR,
        73: THREE_FROM_BLUE,
        74: FOREST_OR_MOUNTAIN,
        75: "not_forest/mountain",
        76: "not_desert/water",
        77: ONE_FROM_FOREST,
        78: DESERT_OR_WATER,
        79: "not_1forest",
        80: "not_forest/desert",
        81: DESERT_OR_MOUNTAIN,
        82: "not_1animal",
        83: ONE_FROM_ANIMAL,
        84: ONE_FROM_WATER,
        85: THREE_FROM_GREEN,
        86: FOREST_OR_WATER,
        87: "not_1swamp",
        88: "not_1mountain",
        89: "not_3green",
        90: "not_3white",
        91: FOREST_OR_DESERT,
        92: "not_1forest",
        93: "not_desert/mountain",
        94: "not_1swamp",
        95: "not_2cougar",
        96: "not_desert/swamp",
    },
    "epsilon": {
        1: FOREST_OR_SWAMP,
        2: ONE_FROM_FOREST,
        3: "not_1animal",
        4: "not_forest/mountain",
        5: "not_forest/swamp",
        6: "not_3blue",
        7: THREE_FROM_BLACK,
        8: DESERT_OR_WATER,
        9: THREE_FROM_GREEN,
        10: "not_2shack",
        11: ONE_FROM_DESERT,
        12: "not_2bear",
        13: ONE_FROM_ANIMAL,
        14: "not_1mountain",
        15: "not_1animal",
        16: THREE_FROM_WHITE,
        17: ONE_FROM_WATER,
        18: "not_1desert",
        19: THREE_FROM_BLACK,
        20: "not_forest/desert",
        21: TWO_FROM_COUGAR,
        22: ONE_FROM_WATER,
        23: TWO_FROM_COUGAR,
        24: "not_desert/swamp",
        25: "not_forest/desert",
        26: FOREST_OR_MOUNTAIN,
        27: FOREST_OR_WATER,
        28: THREE_FROM_GREEN,
        29: ONE_FROM_SWAMP,
        30: TWO_FROM_STANDING_STONE,
        31: "not_water/swamp",
        32: "not_desert/mountain",
        33: SWAMP_OR_MOUNTAIN,
        34: ONE_FROM_MOUNTAIN,
        35: "not_2cougar",
        36: "not_desert/water",
        37: FOREST_OR_WATER,
        38: SWAMP_OR_MOUNTAIN,
        39: "not_water/swamp",
        40: "not_forest/mountain",
        41: THREE_FROM_BLUE,
        42: ONE_FROM_FOREST,
        43: "not_3white",
        44: WATER_OR_MOUNTAIN,
        45: DESERT_OR_MOUNTAIN,
        46: "not_desert/water",
        47: "not_desert/swamp",
        48: FOREST_OR_SWAMP,
        49: "not_1mountain",
        50: THREE_FROM_BLUE,
        51: FOREST_OR_MOUNTAIN,
        52: THREE_FROM_WHITE,
        53: "not_1swamp",
        54: "not_swamp/mountain",
        55: DESERT_OR_SWAMP,
        56: "not_2bear",
        57: ONE_FROM_SWAMP,
        58: "not_1water",
        59: "not_2shack",
        60: "not_2stone",
        61: TWO_FROM_ABANDONED_SHACK,
        62: DESERT_OR_MOUNTAIN,
        63: "not_3white",
        64: "not_1water",
        65: "not_3green",
        66: WATER_OR_SWAMP,
        67: ONE_FROM_DESERT,
        68: ONE_FROM_MOUNTAIN,
        69: "not_swamp/mountain",
        70: "not_3black",
        71: "not_forest/water",
        72: FOREST_OR_DESERT,
        73: "not_3black",
        74: "not_3green",
        75: "not_3blue",
        76: DESERT_OR_SWAMP,
        77: "not_forest/swamp",
        78: DESERT_OR_WATER,
        79: "not_1swamp",
        80: "not_water/mountain",
        81: "not_1forest",
        82: TWO_FROM_ABANDONED_SHACK,
        83: TWO_FROM_STANDING_STONE,
        84: WATER_OR_MOUNTAIN,
        85: "not_2cougar",
        86: TWO_FROM_BEAR,
        87: FOREST_OR_DESERT,
        88: "not_water/mountain",
        89: TWO_FROM_BEAR,
        90: "not_desert/mountain",
        91: "not_1forest",
        92: ONE_FROM_ANIMAL,
        93: "not_forest/water",
        94: "not_2stone",
        95: WATER_OR_SWAMP,
        96: "not_1desert",
    },
}


def by_booklet_entry(alphabet: str, number: int) -> Clue:
    # TODO Refactor: Move to Clue classmethod
    # TODO QOL: Accept alphabet letters

    # alphabet_lookup = {"a": "alpha", "b": "beta", "g": "gamma", "d": "delta", "e": "epsilon"}
    # alphabet = alphabet_lookup.get(alphabet.lower(), alphabet.lower())

    assert alphabet.lower() in __CLUE_LOOKUP, (
        f"Alphabet must be in {list(__CLUE_LOOKUP.keys())}"
    )

    assert number in __CLUE_LOOKUP["alpha"].keys(), (
        f"Number should in range {min(__CLUE_LOOKUP['alpha'].keys())}"
        f"...{max(__CLUE_LOOKUP['alpha'].keys())}"
    )

    clue = __CLUE_LOOKUP[alphabet.lower()][number]

    if isinstance(clue, str) and clue.startswith("not"):
        raise NotImplementedError("Inverted clues are not implemented")

    if isinstance(clue, Clue):
        return copy.deepcopy(clue)

    # Presumable clue was str, meaning it's a placeholder
    raise NotImplementedError("Inverted clues not implemented")


if __name__ == "__main__":
    by_booklet_entry("alpha", 12)
